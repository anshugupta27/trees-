https://practice.geeksforgeeks.org/problems/symmetric-tree/1

Given a Binary Tree of size N, your task is to complete the function isSymettric(), that check whether a
                                       binary is Symmetric or not, i.e. the binary tree is Mirror image of itself or not.



bool isSymmetricUtil ( Node* root1 , Node* root2 )
{
    if ( !root1 and !root2 )
    return 1 ;
    if ( !root1 | !root2 )
    return 0 ;
    if ( root1 -> data != root2 -> data )
    return 0 ;
    if ( root1 -> data == root2 -> data and isSymmetricUtil ( root1 -> left , root2 -> right ) and isSymmetricUtil ( root1 -> right , root2 -> left )) 
    return 1 ;
    return 0 ;
}

bool isSymmetric(struct Node* root)
{
	return isSymmetricUtil ( root , root ) ;
}
