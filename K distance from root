 K distance from root

using namespace std;


struct Node
{
	int data;
	struct Node *left;
	struct Node *right;
	
	Node(int x){
	    data = x;
	    left = NULL;
	    right = NULL;
	}
};


void printKdistance(struct Node *root, int k);

int main()
{
  int t;
  struct Node *child;
  scanf("%d\n", &t);
  while (t--)
  {
     map<int, Node*> m;
     int n,k;
     scanf("%d%d",&n,&k);
     struct Node *root = NULL;
     while (n--)
     {
        Node *parent;
        char lr;
        int n1, n2;
        scanf("%d %d %c", &n1, &n2, &lr);

        if (m.find(n1) == m.end())
        {
           parent = new Node(n1);
           m[n1] = parent;
           if (root == NULL)
             root = parent;
        }
        else
           parent = m[n1];

        child = new Node(n2);
        if (lr == 'L')
          parent->left = child;
        else
          parent->right = child;
        m[n2]  = child;
     }

     printKdistance(root,k);
     cout << endl;
  }
  return 0;
}


void printKdistance(Node *root, int k)
{
   if(root==NULL)
    return ;
  if(k==0)
  {
      cout<<root->data<<" ";
      return ;
  }
  printKdistance(root->left,k-1);
  printKdistance(root->right,k-1);
  
  
}
